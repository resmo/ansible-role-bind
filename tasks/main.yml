---
- name: Add the OS specific variables
  include_vars: '{{ ansible_os_family }}.yml'

- name: install bind packages
  apt: pkg={{ item }} state={{ bind_pkg_state }}
  with_items: bind_pkgs
  when: ansible_os_family == 'Debian'
  tags: package

- name: install bind packages
  yum: pkg={{ item }} state={{ bind_pkg_state }}
  with_items: bind_pkgs
  when: ansible_os_family == 'RedHat'
  tags: package

- name: setup zone directories
  file: dest={{ bind_base_zones_path }}/{{ item }} state=directory owner={{ bind_user }} group={{ bind_group }} mode=0755
  with_items:
  - masters
  - slaves
  tags: configuration

- name: setup zones
  template: src=named.conf.local.{{ item }}.j2 dest={{ bind_config_basepath }}/named.conf.local.{{ item }} owner={{ bind_user }} group={{ bind_group }} mode=0600
  with_items:
  - master
  - slave
  - forward
  notify: reload bind
  tags: configuration

- name: configure bind
  copy: src=named.conf dest={{ bind_config_basepath }}/named.conf owner={{ bind_user }} group={{ bind_group }} mode=0600
  notify: restart bind
  tags: configuration

- name: configure bind options
  template: src=named.conf.options.j2 dest={{ bind_config_basepath }}/named.conf.options owner={{ bind_user }} group={{ bind_group }} mode=0600
  notify: restart bind
  tags: configuration

- name: Copy master zone files
  copy: src={{ bind_masterzones_path }}/db.{{ item.name }} dest={{ bind_base_zones_path }}/{{bind_masterzones_path}} owner={{ bind_user }} group={{ bind_group }}
  with_items: bind_config_master_zones
  notify: reload bind
  tags: zones

- name: start/stop bind service
  service: name={{ bind_service_name }} state={{ bind_service_state }} enabled={{ bind_service_enabled }}
  tags: service
